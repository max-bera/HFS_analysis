function F = double_power_law_fit(params,Ecomp)
%double_power_law_fit.m fits E* vs frequency with a lumped parameter model
%equivalent to two parallel springpots. E* = A*(iw)^alpha)+B*(iw)^beta
%
%INPUT (* are mandatory)
%Ecomp       *    complex modulus
%freq_range  *    measured frequencies
%
%OUTPUT
%fit coefficients (A, B, alpha, beta)
%%

function F=modelfun(params,oscfreq,Ecomp)
 storagemod = real(params(1).*(1i*oscfreq).*params(2)+params(3).*(1i*oscfreq).*(params(4))-Ecomp);
 lossmod = imag(params(1).*(1i*oscfreq).*params(2)+params(3).*(1i*oscfreq).*(params(4))-Ecomp);
 
 F=[storagemod,lossmod];
 
end

% if nargin<3; help PowerLaw; return; end
% %%
% %join storage and loss
% Ecomp = [Estor;Eloss.*1i]/1000;
% freqcomp = [freq_range;freq_range];
% 
% %fit complex data
% fitobj = @(params,xdata) params(1).*(1i*xdata).*params(2)+params(3).*(1i*xdata).*(3/4);
% 
% init_guess = [1,0.3,1];
% [model,FTres] = lsqcurvefit(fitobj, init_guess, freqcomp,Ecomp)
% %fit_coeff = coeffvalues(model)
% %R2 = FTres.rsquare;
% 
% figure(1)
% %hold off
% loglog(freq_range,Estor,'ok')
% hold on
% loglog(freq_range,Eloss,'*k')
% 
% loglog(unique(freq_range),real(fitobj(model,unique(freq_range))),'g-');
% loglog(unique(freq_range),imag(fitobj(model,unique(freq_range))),'r--');

end
%%